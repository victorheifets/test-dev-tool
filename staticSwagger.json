{
    "openapi": "3.1.0",
    "info": {
        "title": "Course Management API",
        "description": "Full CRUD API for managing educational courses and activities",
        "version": "2.0.0"
    },
    "paths": {
        "/api/providers": {
            "get": {
                "tags": [
                    "providers"
                ],
                "summary": "Read Items",
                "description": "Retrieve items with pagination support.",
                "operationId": "read_items_api_providers_get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Skip",
                            "default": 0
                        },
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Limit",
                            "default": 100
                        },
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Provider"
                                    },
                                    "type": "array",
                                    "title": "Response Read Items Api Providers Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "providers"
                ],
                "summary": "Create Item",
                "description": "Create a new item.",
                "operationId": "create_item_api_providers_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/providers/{item_id}": {
            "get": {
                "tags": [
                    "providers"
                ],
                "summary": "Read Item",
                "description": "Get a specific item by ID.",
                "operationId": "read_item_api_providers__item_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "providers"
                ],
                "summary": "Update Item",
                "description": "Update an item.",
                "operationId": "update_item_api_providers__item_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "providers"
                ],
                "summary": "Delete Item",
                "description": "Delete an item.",
                "operationId": "delete_item_api_providers__item_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "providers"
                ],
                "summary": "Patch Item",
                "description": "Partially update an item.",
                "operationId": "patch_item_api_providers__item_id__patch",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/providers/create": {
            "post": {
                "tags": [
                    "providers"
                ],
                "summary": "Create Provider",
                "description": "Create a new provider without requiring a provider_id.",
                "operationId": "create_provider_api_providers_create_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProviderCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/activities/featured": {
            "get": {
                "tags": [
                    "activities"
                ],
                "summary": "Get Featured Activities",
                "description": "Get featured activities with tenant isolation.",
                "operationId": "get_featured_activities_api_activities_featured_get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 20.0,
                            "minimum": 1.0,
                            "title": "Limit",
                            "default": 5
                        },
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity"
                                    },
                                    "type": "array",
                                    "title": "Response Get Featured Activities Api Activities Featured Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/activities/upcoming": {
            "get": {
                "tags": [
                    "activities"
                ],
                "summary": "Get Upcoming Activities",
                "description": "Get upcoming activities starting within the specified number of days.",
                "operationId": "get_upcoming_activities_api_activities_upcoming_get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 365.0,
                            "minimum": 1.0,
                            "title": "Days",
                            "default": 30
                        },
                        "name": "days",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 50.0,
                            "minimum": 1.0,
                            "title": "Limit",
                            "default": 10
                        },
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity"
                                    },
                                    "type": "array",
                                    "title": "Response Get Upcoming Activities Api Activities Upcoming Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/activities/category/{category}": {
            "get": {
                "tags": [
                    "activities"
                ],
                "summary": "Get Activities By Category",
                "description": "Get activities by category with tenant isolation.",
                "operationId": "get_activities_by_category_api_activities_category__category__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Category"
                        },
                        "name": "category",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100.0,
                            "minimum": 1.0,
                            "title": "Limit",
                            "default": 20
                        },
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity"
                                    },
                                    "type": "array",
                                    "title": "Response Get Activities By Category Api Activities Category  Category  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/activities/{item_id}/status": {
            "patch": {
                "tags": [
                    "activities"
                ],
                "summary": "Update Activity Status",
                "description": "Update just the status of an activity with tenant isolation.",
                "operationId": "update_activity_status_api_activities__item_id__status_patch",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ActivityStatus"
                        },
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/activities/search": {
            "get": {
                "tags": [
                    "activities"
                ],
                "summary": "Search Activities",
                "description": "Search for activities by name or description with tenant isolation.",
                "operationId": "search_activities_api_activities_search_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Query"
                        },
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity"
                                    },
                                    "type": "array",
                                    "title": "Response Search Activities Api Activities Search Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/activities/provider/{provider_id}": {
            "get": {
                "tags": [
                    "activities"
                ],
                "summary": "Get Activities By Provider",
                "description": "Get all activities for a specific provider with tenant isolation.\nOnly allows access if the requested provider_id matches the authenticated provider.",
                "operationId": "get_activities_by_provider_api_activities_provider__provider_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Provider Id"
                        },
                        "name": "provider_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity"
                                    },
                                    "type": "array",
                                    "title": "Response Get Activities By Provider Api Activities Provider  Provider Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/activities": {
            "get": {
                "tags": [
                    "activities"
                ],
                "summary": "Read Activities",
                "description": "Get all activities with advanced filtering, sorting, pagination and tenant isolation.",
                "operationId": "read_activities_api_activities_get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0.0,
                            "title": "Skip",
                            "default": 0
                        },
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 500.0,
                            "minimum": 1.0,
                            "title": "Limit",
                            "default": 100
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Sort By",
                            "description": "Field to sort by"
                        },
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^(asc|desc)$",
                            "title": "Sort Order",
                            "default": "asc"
                        },
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/ActivityStatus"
                        },
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Category"
                        },
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Level"
                        },
                        "name": "level",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "Featured"
                        },
                        "name": "featured",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Search"
                        },
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "Start Date"
                        },
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "End Date"
                        },
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Read Activities Api Activities Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "activities"
                ],
                "summary": "Create Activity",
                "description": "Create a new activity with tenant isolation.",
                "operationId": "create_activity_api_activities_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/activities/{item_id}": {
            "get": {
                "tags": [
                    "activities"
                ],
                "summary": "Read Activity",
                "description": "Get a specific activity by ID with tenant isolation.",
                "operationId": "read_activity_api_activities__item_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "activities"
                ],
                "summary": "Update Activity",
                "description": "Update an activity with tenant isolation.",
                "operationId": "update_activity_api_activities__item_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "activities"
                ],
                "summary": "Delete Activity",
                "description": "Delete an activity with tenant isolation.",
                "operationId": "delete_activity_api_activities__item_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "activities"
                ],
                "summary": "Patch Activity",
                "description": "Partially update an activity.",
                "operationId": "patch_activity_api_activities__item_id__patch",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/activities/trainer/{trainer_id}": {
            "get": {
                "tags": [
                    "activities"
                ],
                "summary": "Get Activities By Trainer",
                "description": "Get all activities for a specific trainer with tenant isolation.",
                "operationId": "get_activities_by_trainer_api_activities_trainer__trainer_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Trainer Id"
                        },
                        "name": "trainer_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity"
                                    },
                                    "type": "array",
                                    "title": "Response Get Activities By Trainer Api Activities Trainer  Trainer Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/participants/email/{email}": {
            "get": {
                "tags": [
                    "participants"
                ],
                "summary": "Get Participant By Email",
                "description": "Get a participant by email address.",
                "operationId": "get_participant_by_email_api_participants_email__email__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Email"
                        },
                        "name": "email",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/participants": {
            "get": {
                "tags": [
                    "participants"
                ],
                "summary": "Read Items",
                "description": "Retrieve items with pagination support.",
                "operationId": "read_items_api_participants_get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Skip",
                            "default": 0
                        },
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Limit",
                            "default": 100
                        },
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Participant"
                                    },
                                    "type": "array",
                                    "title": "Response Read Items Api Participants Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "participants"
                ],
                "summary": "Create Item",
                "description": "Create a new item.",
                "operationId": "create_item_api_participants_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParticipantCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/participants/{item_id}": {
            "get": {
                "tags": [
                    "participants"
                ],
                "summary": "Read Item",
                "description": "Get a specific item by ID.",
                "operationId": "read_item_api_participants__item_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "participants"
                ],
                "summary": "Update Item",
                "description": "Update an item.",
                "operationId": "update_item_api_participants__item_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParticipantUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "participants"
                ],
                "summary": "Delete Item",
                "description": "Delete an item.",
                "operationId": "delete_item_api_participants__item_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "participants"
                ],
                "summary": "Patch Item",
                "description": "Partially update an item.",
                "operationId": "patch_item_api_participants__item_id__patch",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParticipantUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Participant"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/enrollments/participant/{participant_id}": {
            "get": {
                "tags": [
                    "enrollments"
                ],
                "summary": "Get Enrollments By Participant",
                "description": "Get all enrollments for a specific participant with multi-tenant isolation.",
                "operationId": "get_enrollments_by_participant_api_enrollments_participant__participant_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Participant Id"
                        },
                        "name": "participant_id",
                        "in": "path"
                    },
                    {
                        "description": "Filter by enrollment status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Status",
                            "description": "Filter by enrollment status"
                        },
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "description": "Filter by enrollment date (start range)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "Start Date",
                            "description": "Filter by enrollment date (start range)"
                        },
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "description": "Filter by enrollment date (end range)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "End Date",
                            "description": "Filter by enrollment date (end range)"
                        },
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Provider-Id"
                        },
                        "name": "x-provider-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Enrollment"
                                    },
                                    "type": "array",
                                    "title": "Response Get Enrollments By Participant Api Enrollments Participant  Participant Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/enrollments/activity/{activity_id}": {
            "get": {
                "tags": [
                    "enrollments"
                ],
                "summary": "Get Enrollments By Activity",
                "description": "Get all enrollments for a specific activity with multi-tenant isolation.",
                "operationId": "get_enrollments_by_activity_api_enrollments_activity__activity_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Activity Id"
                        },
                        "name": "activity_id",
                        "in": "path"
                    },
                    {
                        "description": "Filter by enrollment status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Status",
                            "description": "Filter by enrollment status"
                        },
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "description": "Filter by enrollment date (start range)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "Start Date",
                            "description": "Filter by enrollment date (start range)"
                        },
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "description": "Filter by enrollment date (end range)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "End Date",
                            "description": "Filter by enrollment date (end range)"
                        },
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Provider-Id"
                        },
                        "name": "x-provider-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Enrollment"
                                    },
                                    "type": "array",
                                    "title": "Response Get Enrollments By Activity Api Enrollments Activity  Activity Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/enrollments": {
            "get": {
                "tags": [
                    "enrollments"
                ],
                "summary": "Read Items",
                "description": "Retrieve items with pagination support.",
                "operationId": "read_items_api_enrollments_get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Skip",
                            "default": 0
                        },
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Limit",
                            "default": 100
                        },
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Enrollment"
                                    },
                                    "type": "array",
                                    "title": "Response Read Items Api Enrollments Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "enrollments"
                ],
                "summary": "Create Enrollment",
                "description": "Create a new enrollment with multi-tenant isolation.",
                "operationId": "create_enrollment_api_enrollments_post",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Provider-Id"
                        },
                        "name": "x-provider-id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnrollmentCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Enrollment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/enrollments/status/{status}": {
            "get": {
                "tags": [
                    "enrollments"
                ],
                "summary": "Get Enrollments By Status",
                "description": "Get all enrollments with a specific status with multi-tenant isolation.",
                "operationId": "get_enrollments_by_status_api_enrollments_status__status__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/EnrollmentStatus"
                        },
                        "name": "status",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Provider-Id"
                        },
                        "name": "x-provider-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Enrollment"
                                    },
                                    "type": "array",
                                    "title": "Response Get Enrollments By Status Api Enrollments Status  Status  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/enrollments/recent/{days}": {
            "get": {
                "tags": [
                    "enrollments"
                ],
                "summary": "Get Recent Enrollments",
                "description": "Get enrollments created within the last specified number of days with multi-tenant isolation.",
                "operationId": "get_recent_enrollments_api_enrollments_recent__days__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0.0,
                            "title": "Days"
                        },
                        "name": "days",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Provider-Id"
                        },
                        "name": "x-provider-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Enrollment"
                                    },
                                    "type": "array",
                                    "title": "Response Get Recent Enrollments Api Enrollments Recent  Days  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/enrollments/{enrollment_id}/status": {
            "patch": {
                "tags": [
                    "enrollments"
                ],
                "summary": "Update Enrollment Status",
                "description": "Update only the status of an enrollment with multi-tenant isolation.",
                "operationId": "update_enrollment_status_api_enrollments__enrollment_id__status_patch",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Enrollment Id"
                        },
                        "name": "enrollment_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/EnrollmentStatus"
                        },
                        "name": "status_value",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Provider-Id"
                        },
                        "name": "x-provider-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Enrollment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/enrollments/search": {
            "get": {
                "tags": [
                    "enrollments"
                ],
                "summary": "Search Enrollments",
                "description": "Search enrollments with multi-tenant isolation.",
                "operationId": "search_enrollments_api_enrollments_search_get",
                "parameters": [
                    {
                        "description": "Search query string",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Query",
                            "description": "Search query string",
                            "default": ""
                        },
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "description": "Filter by enrollment status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Status",
                            "description": "Filter by enrollment status"
                        },
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "description": "Filter by enrollment date (start range)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "Start Date",
                            "description": "Filter by enrollment date (start range)"
                        },
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "description": "Filter by enrollment date (end range)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "End Date",
                            "description": "Filter by enrollment date (end range)"
                        },
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Provider-Id"
                        },
                        "name": "x-provider-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Enrollment"
                                    },
                                    "type": "array",
                                    "title": "Response Search Enrollments Api Enrollments Search Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/enrollments/{item_id}": {
            "get": {
                "tags": [
                    "enrollments"
                ],
                "summary": "Read Item",
                "description": "Get a specific item by ID.",
                "operationId": "read_item_api_enrollments__item_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Enrollment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "enrollments"
                ],
                "summary": "Update Item",
                "description": "Update an item.",
                "operationId": "update_item_api_enrollments__item_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnrollmentUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Enrollment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "enrollments"
                ],
                "summary": "Delete Item",
                "description": "Delete an item.",
                "operationId": "delete_item_api_enrollments__item_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "enrollments"
                ],
                "summary": "Patch Item",
                "description": "Partially update an item.",
                "operationId": "patch_item_api_enrollments__item_id__patch",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnrollmentUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Enrollment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/statistics": {
            "get": {
                "tags": [
                    "statistics"
                ],
                "summary": "Get Statistics",
                "description": "Get statistics about the system.\nReturns counts of providers, activities, participants, and enrollments.",
                "operationId": "get_statistics_api_statistics_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/statistics/": {
            "get": {
                "tags": [
                    "statistics"
                ],
                "summary": "Get Statistics",
                "description": "Get statistics about the system.\nReturns counts of providers, activities, participants, and enrollments.",
                "operationId": "get_statistics_api_statistics__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/groups": {
            "get": {
                "tags": [
                    "groups"
                ],
                "summary": "Read Items",
                "description": "Retrieve items with pagination support.",
                "operationId": "read_items_api_groups_get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Skip",
                            "default": 0
                        },
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Limit",
                            "default": 100
                        },
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Group"
                                    },
                                    "type": "array",
                                    "title": "Response Read Items Api Groups Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "groups"
                ],
                "summary": "Create Item",
                "description": "Create a new item.",
                "operationId": "create_item_api_groups_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{item_id}": {
            "get": {
                "tags": [
                    "groups"
                ],
                "summary": "Read Item",
                "description": "Get a specific item by ID.",
                "operationId": "read_item_api_groups__item_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "groups"
                ],
                "summary": "Update Item",
                "description": "Update an item.",
                "operationId": "update_item_api_groups__item_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "groups"
                ],
                "summary": "Delete Item",
                "description": "Delete an item.",
                "operationId": "delete_item_api_groups__item_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "groups"
                ],
                "summary": "Patch Item",
                "description": "Partially update an item.",
                "operationId": "patch_item_api_groups__item_id__patch",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/by-activity/{activity_id}": {
            "get": {
                "tags": [
                    "groups"
                ],
                "summary": "Get Groups By Activity",
                "description": "Get all groups for a specific activity/course",
                "operationId": "get_groups_by_activity_api_groups_by_activity__activity_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Activity Id"
                        },
                        "name": "activity_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Group"
                                    },
                                    "type": "array",
                                    "title": "Response Get Groups By Activity Api Groups By Activity  Activity Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{group_id}/participants": {
            "post": {
                "tags": [
                    "groups"
                ],
                "summary": "Add Participant To Group",
                "description": "Add a participant to a group",
                "operationId": "add_participant_to_group_api_groups__group_id__participants_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Group Id"
                        },
                        "name": "group_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupParticipantCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{group_id}/participants/{participant_id}": {
            "delete": {
                "tags": [
                    "groups"
                ],
                "summary": "Remove Participant From Group",
                "description": "Remove a participant from a group",
                "operationId": "remove_participant_from_group_api_groups__group_id__participants__participant_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Group Id"
                        },
                        "name": "group_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Participant Id"
                        },
                        "name": "participant_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/marketing/leads": {
            "get": {
                "tags": [
                    "marketing"
                ],
                "summary": "Read Items",
                "description": "Retrieve items with pagination support.",
                "operationId": "read_items_api_marketing_leads_get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Skip",
                            "default": 0
                        },
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Limit",
                            "default": 100
                        },
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Lead"
                                    },
                                    "type": "array",
                                    "title": "Response Read Items Api Marketing Leads Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "marketing"
                ],
                "summary": "Create Item",
                "description": "Create a new item.",
                "operationId": "create_item_api_marketing_leads_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeadCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/marketing/leads/{item_id}": {
            "get": {
                "tags": [
                    "marketing"
                ],
                "summary": "Read Item",
                "description": "Get a specific item by ID.",
                "operationId": "read_item_api_marketing_leads__item_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "marketing"
                ],
                "summary": "Update Item",
                "description": "Update an item.",
                "operationId": "update_item_api_marketing_leads__item_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeadUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "marketing"
                ],
                "summary": "Delete Item",
                "description": "Delete an item.",
                "operationId": "delete_item_api_marketing_leads__item_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "marketing"
                ],
                "summary": "Patch Item",
                "description": "Partially update an item.",
                "operationId": "patch_item_api_marketing_leads__item_id__patch",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        },
                        "name": "item_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeadUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/marketing/leads/by-source/{source}": {
            "get": {
                "tags": [
                    "marketing"
                ],
                "summary": "Get Leads By Source",
                "description": "Get all leads from a specific source",
                "operationId": "get_leads_by_source_api_marketing_leads_by_source__source__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/LeadSource"
                        },
                        "name": "source",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Lead"
                                    },
                                    "type": "array",
                                    "title": "Response Get Leads By Source Api Marketing Leads By Source  Source  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/marketing/leads/by-status/{status}": {
            "get": {
                "tags": [
                    "marketing"
                ],
                "summary": "Get Leads By Status",
                "description": "Get all leads with a specific status",
                "operationId": "get_leads_by_status_api_marketing_leads_by_status__status__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/LeadStatus"
                        },
                        "name": "status",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Lead"
                                    },
                                    "type": "array",
                                    "title": "Response Get Leads By Status Api Marketing Leads By Status  Status  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/marketing/leads/{lead_id}/convert": {
            "post": {
                "tags": [
                    "marketing"
                ],
                "summary": "Convert Lead To Participant",
                "description": "Convert a lead to a participant",
                "operationId": "convert_lead_to_participant_api_marketing_leads__lead_id__convert_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Lead Id"
                        },
                        "name": "lead_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/activities": {
            "get": {
                "tags": [
                    "public"
                ],
                "summary": "List Public Activities",
                "description": "List public activities/courses\n\nThis endpoint provides a public-facing view of available activities with basic information.\nIt's designed for unauthenticated access to course listings.",
                "operationId": "list_public_activities_api_public_activities_get",
                "parameters": [
                    {
                        "description": "Filter by activity status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Status",
                            "description": "Filter by activity status"
                        },
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "description": "Filter by provider ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Provider Id",
                            "description": "Filter by provider ID"
                        },
                        "name": "provider_id",
                        "in": "query"
                    },
                    {
                        "description": "Maximum number of activities to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100.0,
                            "title": "Limit",
                            "description": "Maximum number of activities to return",
                            "default": 10
                        },
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity"
                                    },
                                    "type": "array",
                                    "title": "Response List Public Activities Api Public Activities Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/activities/{activity_id}": {
            "get": {
                "tags": [
                    "public"
                ],
                "summary": "Get Public Activity",
                "description": "Get details for a specific public activity/course\n\nThis endpoint provides detailed information about a specific course for public viewing.",
                "operationId": "get_public_activity_api_public_activities__activity_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Activity Id"
                        },
                        "name": "activity_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/providers": {
            "get": {
                "tags": [
                    "public"
                ],
                "summary": "List Public Providers",
                "description": "List public providers\n\nThis endpoint provides a public-facing view of available course providers.",
                "operationId": "list_public_providers_api_public_providers_get",
                "parameters": [
                    {
                        "description": "Maximum number of providers to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100.0,
                            "title": "Limit",
                            "description": "Maximum number of providers to return",
                            "default": 10
                        },
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Provider"
                                    },
                                    "type": "array",
                                    "title": "Response List Public Providers Api Public Providers Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/providers/{provider_id}": {
            "get": {
                "tags": [
                    "public"
                ],
                "summary": "Get Public Provider",
                "description": "Get details for a specific public provider\n\nThis endpoint provides detailed information about a specific course provider for public viewing.",
                "operationId": "get_public_provider_api_public_providers__provider_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Provider Id"
                        },
                        "name": "provider_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/providers/{provider_id}/activities": {
            "get": {
                "tags": [
                    "public"
                ],
                "summary": "Get Provider Activities",
                "description": "Get all activities/courses for a specific provider\n\nThis endpoint provides a list of all courses offered by a specific provider.",
                "operationId": "get_provider_activities_api_public_providers__provider_id__activities_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Provider Id"
                        },
                        "name": "provider_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity"
                                    },
                                    "type": "array",
                                    "title": "Response Get Provider Activities Api Public Providers  Provider Id  Activities Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/health": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "description": "Basic health check endpoint that returns service status and uptime.\n\nThis endpoint is used by monitoring tools to check if the API is responsive.",
                "operationId": "health_check_api_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/search": {
            "get": {
                "tags": [
                    "search"
                ],
                "summary": "Search",
                "description": "Search across multiple resource types\n\nThis endpoint allows searching across activities, providers, and participants.\nUse the 'type' parameter to restrict search to a specific resource type.",
                "operationId": "search_api_search_get",
                "parameters": [
                    {
                        "description": "Search query string",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Q",
                            "description": "Search query string"
                        },
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "description": "Type of resource to search (activity, provider, participant, enrollment)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Type",
                            "description": "Type of resource to search (activity, provider, participant, enrollment)"
                        },
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "description": "Maximum number of results to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100.0,
                            "title": "Limit",
                            "description": "Maximum number of results to return",
                            "default": 10
                        },
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "root"
                ],
                "summary": "Read Root",
                "operationId": "read_root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Activity": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "provider_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Provider Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "default": true
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "capacity": {
                        "type": "integer",
                        "title": "Capacity"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Start Date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "title": "End Date"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ActivityStatus"
                            }
                        ],
                        "default": "draft"
                    },
                    "sessions": {
                        "items": {
                            "$ref": "#/components/schemas/SessionInfo"
                        },
                        "type": "array",
                        "title": "Sessions",
                        "default": []
                    },
                    "pricing": {
                        "$ref": "#/components/schemas/PriceInfo"
                    },
                    "location": {
                        "type": "string",
                        "title": "Location"
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Tags",
                        "default": []
                    },
                    "prerequisites": {
                        "type": "string",
                        "title": "Prerequisites"
                    },
                    "category": {
                        "type": "string",
                        "title": "Category"
                    },
                    "activity_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ActivityType"
                            }
                        ],
                        "default": "course"
                    },
                    "level": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ActivityLevel"
                            }
                        ],
                        "default": "all_levels"
                    },
                    "trainer_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Trainer Id"
                    },
                    "image_url": {
                        "type": "string",
                        "title": "Image Url"
                    },
                    "landing_page_url": {
                        "type": "string",
                        "title": "Landing Page Url"
                    },
                    "featured": {
                        "type": "boolean",
                        "title": "Featured",
                        "default": false
                    },
                    "registration_deadline": {
                        "type": "string",
                        "format": "date",
                        "title": "Registration Deadline"
                    },
                    "min_participants": {
                        "type": "integer",
                        "title": "Min Participants"
                    },
                    "max_participants": {
                        "type": "integer",
                        "title": "Max Participants"
                    },
                    "cancellation_policy": {
                        "type": "string",
                        "title": "Cancellation Policy"
                    },
                    "materials_included": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Materials Included"
                    },
                    "learning_outcomes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Learning Outcomes"
                    },
                    "enrollments_count": {
                        "type": "integer",
                        "title": "Enrollments Count",
                        "default": 0
                    },
                    "available_spots": {
                        "type": "integer",
                        "title": "Available Spots",
                        "default": 0
                    },
                    "is_fully_booked": {
                        "type": "boolean",
                        "title": "Is Fully Booked",
                        "default": false
                    },
                    "rating": {
                        "type": "number",
                        "title": "Rating"
                    },
                    "reviews_count": {
                        "type": "integer",
                        "title": "Reviews Count",
                        "default": 0
                    }
                },
                "type": "object",
                "required": [
                    "provider_id",
                    "name",
                    "description",
                    "start_date",
                    "end_date",
                    "pricing"
                ],
                "title": "Activity"
            },
            "ActivityCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "provider_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Provider Id"
                    },
                    "capacity": {
                        "type": "integer",
                        "title": "Capacity"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Start Date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "title": "End Date"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ActivityStatus"
                            }
                        ],
                        "default": "draft"
                    },
                    "sessions": {
                        "items": {
                            "$ref": "#/components/schemas/SessionInfo"
                        },
                        "type": "array",
                        "title": "Sessions",
                        "default": []
                    },
                    "pricing": {
                        "$ref": "#/components/schemas/PriceInfo"
                    },
                    "location": {
                        "type": "string",
                        "title": "Location"
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Tags",
                        "default": []
                    },
                    "prerequisites": {
                        "type": "string",
                        "title": "Prerequisites"
                    },
                    "category": {
                        "type": "string",
                        "title": "Category"
                    },
                    "activity_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ActivityType"
                            }
                        ],
                        "default": "course"
                    },
                    "level": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ActivityLevel"
                            }
                        ],
                        "default": "all_levels"
                    },
                    "trainer_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Trainer Id"
                    },
                    "image_url": {
                        "type": "string",
                        "title": "Image Url"
                    },
                    "landing_page_url": {
                        "type": "string",
                        "title": "Landing Page Url"
                    },
                    "featured": {
                        "type": "boolean",
                        "title": "Featured",
                        "default": false
                    },
                    "registration_deadline": {
                        "type": "string",
                        "format": "date",
                        "title": "Registration Deadline"
                    },
                    "min_participants": {
                        "type": "integer",
                        "title": "Min Participants"
                    },
                    "max_participants": {
                        "type": "integer",
                        "title": "Max Participants"
                    },
                    "cancellation_policy": {
                        "type": "string",
                        "title": "Cancellation Policy"
                    },
                    "materials_included": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Materials Included"
                    },
                    "learning_outcomes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Learning Outcomes"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "provider_id",
                    "start_date",
                    "end_date",
                    "pricing"
                ],
                "title": "ActivityCreate"
            },
            "ActivityLevel": {
                "type": "string",
                "enum": [
                    "beginner",
                    "intermediate",
                    "advanced",
                    "all_levels",
                    "expert"
                ],
                "title": "ActivityLevel",
                "description": "An enumeration."
            },
            "ActivityStatus": {
                "type": "string",
                "enum": [
                    "draft",
                    "published",
                    "ongoing",
                    "completed",
                    "cancelled",
                    "archived"
                ],
                "title": "ActivityStatus",
                "description": "An enumeration."
            },
            "ActivityType": {
                "type": "string",
                "enum": [
                    "course",
                    "workshop",
                    "seminar",
                    "webinar",
                    "training",
                    "retreat",
                    "conference",
                    "other"
                ],
                "title": "ActivityType",
                "description": "An enumeration."
            },
            "ActivityUpdate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "capacity": {
                        "type": "integer",
                        "title": "Capacity"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Start Date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "title": "End Date"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ActivityStatus"
                    },
                    "sessions": {
                        "items": {
                            "$ref": "#/components/schemas/SessionInfo"
                        },
                        "type": "array",
                        "title": "Sessions"
                    },
                    "pricing": {
                        "$ref": "#/components/schemas/PriceInfo"
                    },
                    "location": {
                        "type": "string",
                        "title": "Location"
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Tags"
                    },
                    "prerequisites": {
                        "type": "string",
                        "title": "Prerequisites"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "category": {
                        "type": "string",
                        "title": "Category"
                    },
                    "activity_type": {
                        "$ref": "#/components/schemas/ActivityType"
                    },
                    "level": {
                        "$ref": "#/components/schemas/ActivityLevel"
                    },
                    "trainer_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Trainer Id"
                    },
                    "image_url": {
                        "type": "string",
                        "title": "Image Url"
                    },
                    "landing_page_url": {
                        "type": "string",
                        "title": "Landing Page Url"
                    },
                    "featured": {
                        "type": "boolean",
                        "title": "Featured"
                    },
                    "registration_deadline": {
                        "type": "string",
                        "format": "date",
                        "title": "Registration Deadline"
                    },
                    "min_participants": {
                        "type": "integer",
                        "title": "Min Participants"
                    },
                    "max_participants": {
                        "type": "integer",
                        "title": "Max Participants"
                    },
                    "cancellation_policy": {
                        "type": "string",
                        "title": "Cancellation Policy"
                    },
                    "materials_included": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Materials Included"
                    },
                    "learning_outcomes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Learning Outcomes"
                    }
                },
                "type": "object",
                "title": "ActivityUpdate"
            },
            "Enrollment": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "provider_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Provider Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "default": true
                    },
                    "activity_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Activity Id"
                    },
                    "participant_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Participant Id"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EnrollmentStatus"
                            }
                        ],
                        "default": "pending"
                    },
                    "enrollment_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Enrollment Date"
                    },
                    "notes": {
                        "type": "string",
                        "title": "Notes"
                    },
                    "attended_sessions": {
                        "items": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "type": "array",
                        "title": "Attended Sessions",
                        "default": []
                    },
                    "payment_info": {
                        "$ref": "#/components/schemas/PaymentInfo"
                    },
                    "feedback": {
                        "$ref": "#/components/schemas/FeedbackInfo"
                    },
                    "special_requirements": {
                        "type": "string",
                        "title": "Special Requirements"
                    },
                    "discount_code": {
                        "type": "string",
                        "title": "Discount Code"
                    },
                    "referral_source": {
                        "type": "string",
                        "title": "Referral Source"
                    },
                    "completion_percentage": {
                        "type": "number",
                        "title": "Completion Percentage",
                        "default": 0.0
                    },
                    "days_remaining": {
                        "type": "integer",
                        "title": "Days Remaining"
                    }
                },
                "type": "object",
                "required": [
                    "provider_id",
                    "activity_id",
                    "participant_id"
                ],
                "title": "Enrollment"
            },
            "EnrollmentCreate": {
                "properties": {
                    "activity_id": {
                        "type": "string",
                        "title": "Activity Id"
                    },
                    "participant_id": {
                        "type": "string",
                        "title": "Participant Id"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "notes": {
                        "type": "string",
                        "title": "Notes"
                    },
                    "attended_sessions": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Attended Sessions",
                        "default": []
                    },
                    "payment_info": {
                        "$ref": "#/components/schemas/PaymentInfo"
                    },
                    "special_requirements": {
                        "type": "string",
                        "title": "Special Requirements"
                    },
                    "discount_code": {
                        "type": "string",
                        "title": "Discount Code"
                    },
                    "referral_source": {
                        "type": "string",
                        "title": "Referral Source"
                    }
                },
                "type": "object",
                "title": "EnrollmentCreate"
            },
            "EnrollmentStatus": {
                "type": "string",
                "enum": [
                    "pending",
                    "confirmed",
                    "cancelled",
                    "completed",
                    "waitlisted",
                    "no_show"
                ],
                "title": "EnrollmentStatus",
                "description": "An enumeration."
            },
            "EnrollmentUpdate": {
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/EnrollmentStatus"
                    },
                    "notes": {
                        "type": "string",
                        "title": "Notes"
                    },
                    "attended_sessions": {
                        "items": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "type": "array",
                        "title": "Attended Sessions"
                    },
                    "payment_info": {
                        "$ref": "#/components/schemas/PaymentInfo"
                    },
                    "feedback": {
                        "$ref": "#/components/schemas/FeedbackInfo"
                    },
                    "special_requirements": {
                        "type": "string",
                        "title": "Special Requirements"
                    },
                    "discount_code": {
                        "type": "string",
                        "title": "Discount Code"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    }
                },
                "type": "object",
                "title": "EnrollmentUpdate"
            },
            "FeedbackInfo": {
                "properties": {
                    "rating": {
                        "type": "integer",
                        "title": "Rating"
                    },
                    "comments": {
                        "type": "string",
                        "title": "Comments"
                    },
                    "submitted_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Submitted Date"
                    }
                },
                "type": "object",
                "title": "FeedbackInfo"
            },
            "Group": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique identifier for the group"
                    },
                    "provider_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Provider Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "default": true
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the group"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description of the group"
                    },
                    "activity_id": {
                        "type": "string",
                        "title": "Activity Id",
                        "description": "ID of the activity/course this group belongs to"
                    },
                    "capacity": {
                        "type": "integer",
                        "title": "Capacity",
                        "description": "Maximum number of participants in the group"
                    },
                    "participant_count": {
                        "type": "integer",
                        "title": "Participant Count",
                        "description": "Current number of participants in the group",
                        "default": 0
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "provider_id",
                    "name",
                    "activity_id"
                ],
                "title": "Group",
                "example": {
                    "id": "group-123",
                    "name": "Morning Session",
                    "description": "Students attending the morning session of the course",
                    "activity_id": "activity-456",
                    "capacity": 25,
                    "participant_count": 18,
                    "created_at": "2025-06-01T10:00:00Z"
                }
            },
            "GroupCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the group"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description of the group"
                    },
                    "activity_id": {
                        "type": "string",
                        "title": "Activity Id",
                        "description": "ID of the activity/course this group belongs to"
                    },
                    "capacity": {
                        "type": "integer",
                        "title": "Capacity",
                        "description": "Maximum number of participants in the group"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "activity_id"
                ],
                "title": "GroupCreate"
            },
            "GroupParticipantCreate": {
                "properties": {
                    "participant_id": {
                        "type": "string",
                        "title": "Participant Id",
                        "description": "ID of the participant to add to the group"
                    }
                },
                "type": "object",
                "required": [
                    "participant_id"
                ],
                "title": "GroupParticipantCreate"
            },
            "GroupUpdate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the group"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description of the group"
                    },
                    "capacity": {
                        "type": "integer",
                        "title": "Capacity",
                        "description": "Maximum number of participants in the group"
                    }
                },
                "type": "object",
                "title": "GroupUpdate"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HealthDeclaration": {
                "properties": {
                    "has_medical_conditions": {
                        "type": "boolean",
                        "title": "Has Medical Conditions",
                        "default": false
                    },
                    "medical_conditions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Medical Conditions"
                    },
                    "emergency_contact_name": {
                        "type": "string",
                        "title": "Emergency Contact Name"
                    },
                    "emergency_contact_phone": {
                        "type": "string",
                        "title": "Emergency Contact Phone"
                    },
                    "allergies": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Allergies"
                    },
                    "medications": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Medications"
                    },
                    "additional_notes": {
                        "type": "string",
                        "title": "Additional Notes"
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Updated"
                    }
                },
                "type": "object",
                "title": "HealthDeclaration"
            },
            "Lead": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique identifier for the lead"
                    },
                    "provider_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Provider Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "default": true
                    },
                    "first_name": {
                        "type": "string",
                        "title": "First Name",
                        "description": "First name of the lead"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name",
                        "description": "Last name of the lead"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "Email address of the lead"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone",
                        "description": "Phone number of the lead"
                    },
                    "source": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/LeadSource"
                            }
                        ],
                        "title": "Source",
                        "description": "Source of the lead",
                        "default": "website"
                    },
                    "activity_of_interest": {
                        "type": "string",
                        "title": "Activity Of Interest",
                        "description": "Activity/course the lead is interested in"
                    },
                    "notes": {
                        "type": "string",
                        "title": "Notes",
                        "description": "Additional notes about the lead"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LeadStatus"
                            }
                        ],
                        "description": "Status of the lead",
                        "default": "new"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "provider_id",
                    "first_name",
                    "last_name",
                    "email"
                ],
                "title": "Lead",
                "example": {
                    "id": "lead-123",
                    "first_name": "John",
                    "last_name": "Doe",
                    "email": "john.doe@example.com",
                    "phone": "+1-555-123-4567",
                    "source": "website",
                    "activity_of_interest": "activity-456",
                    "notes": "Interested in morning sessions",
                    "status": "new",
                    "created_at": "2025-06-01T10:00:00Z"
                }
            },
            "LeadCreate": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "title": "First Name",
                        "description": "First name of the lead"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name",
                        "description": "Last name of the lead"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "Email address of the lead"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone",
                        "description": "Phone number of the lead"
                    },
                    "source": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/LeadSource"
                            }
                        ],
                        "title": "Source",
                        "description": "Source of the lead",
                        "default": "website"
                    },
                    "activity_of_interest": {
                        "type": "string",
                        "title": "Activity Of Interest",
                        "description": "Activity/course the lead is interested in"
                    },
                    "notes": {
                        "type": "string",
                        "title": "Notes",
                        "description": "Additional notes about the lead"
                    }
                },
                "type": "object",
                "required": [
                    "first_name",
                    "last_name",
                    "email"
                ],
                "title": "LeadCreate"
            },
            "LeadSource": {
                "type": "string",
                "enum": [
                    "website",
                    "referral",
                    "social_media",
                    "email",
                    "advertisement",
                    "other"
                ],
                "title": "LeadSource",
                "description": "An enumeration."
            },
            "LeadStatus": {
                "type": "string",
                "enum": [
                    "new",
                    "contacted",
                    "qualified",
                    "converted",
                    "lost"
                ],
                "title": "LeadStatus",
                "description": "An enumeration."
            },
            "LeadUpdate": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "title": "First Name",
                        "description": "First name of the lead"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name",
                        "description": "Last name of the lead"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "Email address of the lead"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone",
                        "description": "Phone number of the lead"
                    },
                    "status": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/LeadStatus"
                            }
                        ],
                        "title": "Status",
                        "description": "Status of the lead"
                    },
                    "source": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/LeadSource"
                            }
                        ],
                        "title": "Source",
                        "description": "Source of the lead"
                    },
                    "activity_of_interest": {
                        "type": "string",
                        "title": "Activity Of Interest",
                        "description": "Activity/course the lead is interested in"
                    },
                    "notes": {
                        "type": "string",
                        "title": "Notes",
                        "description": "Additional notes about the lead"
                    }
                },
                "type": "object",
                "title": "LeadUpdate"
            },
            "Participant": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "provider_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Provider Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "default": true
                    },
                    "first_name": {
                        "type": "string",
                        "title": "First Name"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "profile_info": {
                        "type": "object",
                        "title": "Profile Info",
                        "default": {}
                    },
                    "health_declaration": {
                        "$ref": "#/components/schemas/HealthDeclaration"
                    },
                    "terms_declaration": {
                        "$ref": "#/components/schemas/TermsDeclaration"
                    }
                },
                "type": "object",
                "required": [
                    "provider_id",
                    "first_name",
                    "last_name",
                    "email"
                ],
                "title": "Participant"
            },
            "ParticipantCreate": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "title": "First Name"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "profile_info": {
                        "type": "object",
                        "title": "Profile Info",
                        "default": {}
                    },
                    "health_declaration": {
                        "$ref": "#/components/schemas/HealthDeclaration"
                    },
                    "terms_declaration": {
                        "$ref": "#/components/schemas/TermsDeclaration"
                    }
                },
                "type": "object",
                "required": [
                    "first_name",
                    "last_name",
                    "email"
                ],
                "title": "ParticipantCreate"
            },
            "ParticipantUpdate": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "title": "First Name"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "profile_info": {
                        "type": "object",
                        "title": "Profile Info"
                    },
                    "health_declaration": {
                        "$ref": "#/components/schemas/HealthDeclaration"
                    },
                    "terms_declaration": {
                        "$ref": "#/components/schemas/TermsDeclaration"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    }
                },
                "type": "object",
                "title": "ParticipantUpdate"
            },
            "PaymentInfo": {
                "properties": {
                    "amount_paid": {
                        "type": "number",
                        "title": "Amount Paid",
                        "default": 0.0
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Payment Date"
                    },
                    "payment_method": {
                        "type": "string",
                        "title": "Payment Method"
                    },
                    "transaction_id": {
                        "type": "string",
                        "title": "Transaction Id"
                    },
                    "is_refunded": {
                        "type": "boolean",
                        "title": "Is Refunded",
                        "default": false
                    },
                    "refund_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Refund Date"
                    },
                    "refund_amount": {
                        "type": "number",
                        "title": "Refund Amount"
                    },
                    "invoice_id": {
                        "type": "string",
                        "title": "Invoice Id"
                    },
                    "payment_status": {
                        "type": "string",
                        "title": "Payment Status",
                        "default": "unpaid"
                    }
                },
                "type": "object",
                "title": "PaymentInfo"
            },
            "PriceInfo": {
                "properties": {
                    "amount": {
                        "type": "number",
                        "title": "Amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency",
                        "default": "USD"
                    },
                    "payment_schedule": {
                        "type": "string",
                        "title": "Payment Schedule"
                    },
                    "early_bird_discount": {
                        "type": "number",
                        "title": "Early Bird Discount"
                    },
                    "early_bird_deadline": {
                        "type": "string",
                        "format": "date",
                        "title": "Early Bird Deadline"
                    },
                    "group_discount": {
                        "type": "number",
                        "title": "Group Discount"
                    },
                    "min_group_size": {
                        "type": "integer",
                        "title": "Min Group Size"
                    },
                    "installment_options": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Installment Options"
                    },
                    "refund_policy": {
                        "type": "string",
                        "title": "Refund Policy"
                    }
                },
                "type": "object",
                "required": [
                    "amount"
                ],
                "title": "PriceInfo"
            },
            "Provider": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "provider_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Provider Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "default": true
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone"
                    },
                    "website": {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri",
                        "title": "Website"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "logo_url": {
                        "type": "string",
                        "title": "Logo Url"
                    }
                },
                "type": "object",
                "required": [
                    "provider_id",
                    "name",
                    "email"
                ],
                "title": "Provider"
            },
            "ProviderCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone"
                    },
                    "website": {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri",
                        "title": "Website"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "logo_url": {
                        "type": "string",
                        "title": "Logo Url"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "email"
                ],
                "title": "ProviderCreate"
            },
            "ProviderUpdate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone"
                    },
                    "website": {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri",
                        "title": "Website"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address"
                    },
                    "logo_url": {
                        "type": "string",
                        "title": "Logo Url"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    }
                },
                "type": "object",
                "title": "ProviderUpdate"
            },
            "SessionInfo": {
                "properties": {
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start Time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "End Time"
                    },
                    "location": {
                        "type": "string",
                        "title": "Location"
                    },
                    "notes": {
                        "type": "string",
                        "title": "Notes"
                    },
                    "instructor_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Instructor Id"
                    },
                    "max_capacity": {
                        "type": "integer",
                        "title": "Max Capacity"
                    },
                    "is_online": {
                        "type": "boolean",
                        "title": "Is Online",
                        "default": false
                    },
                    "meeting_link": {
                        "type": "string",
                        "title": "Meeting Link"
                    }
                },
                "type": "object",
                "required": [
                    "start_time",
                    "end_time"
                ],
                "title": "SessionInfo"
            },
            "TermsDeclaration": {
                "properties": {
                    "accepted_terms": {
                        "type": "boolean",
                        "title": "Accepted Terms",
                        "default": false
                    },
                    "accepted_privacy_policy": {
                        "type": "boolean",
                        "title": "Accepted Privacy Policy",
                        "default": false
                    },
                    "accepted_liability_waiver": {
                        "type": "boolean",
                        "title": "Accepted Liability Waiver",
                        "default": false
                    },
                    "marketing_consent": {
                        "type": "boolean",
                        "title": "Marketing Consent",
                        "default": false
                    },
                    "acceptance_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Acceptance Date"
                    }
                },
                "type": "object",
                "title": "TermsDeclaration"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        },
        "securitySchemes": {
            "HTTPBearer": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}