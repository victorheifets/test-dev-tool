{
  "openapi": "3.1.0",
  "info": {
    "title": "Course Management API",
    "description": "\n## Course Management System API\n\nA comprehensive RESTful API for managing educational courses, participants, and enrollments.\n\n### Features\n- **Activities/Courses**: Create and manage educational activities\n- **Participants**: Manage student information and profiles\n- **Enrollments**: Handle course registrations and tracking\n- **Marketing**: Lead management and conversion tracking\n- **Authentication**: JWT-based secure authentication\n- **Public API**: Public access to course information\n\n### Authentication\nMost endpoints require authentication using JWT Bearer tokens. \n\n**Test Users:**\n- Admin: `admin@example.com` / `admin123`\n- Manager: `manager@example.com` / `manager123`\n- User: `user@example.com` / `user123`\n\n### Rate Limiting\nAPI requests are limited to prevent abuse. Please implement proper error handling.\n\n### Support\nFor API support, contact the development team.\n    ",
    "version": "2.0.0",
    "x-validation-rules": {
      "description": "Business validation rules",
      "rules": {
        "activity": {
          "capacity_must_be_positive": "Activity capacity must be greater than 0",
          "end_date_after_start": "End date must be after start date",
          "price_non_negative": "Price cannot be negative"
        },
        "participant": {
          "email_required": "Email address is required and must be valid",
          "name_required": "First and last name are required"
        },
        "enrollment": {
          "completion_percentage_range": "Completion percentage must be between 0 and 100",
          "unique_participant_activity": "Participant can only be enrolled once per activity"
        },
        "provider": {
          "unique_email": "Provider email must be unique",
          "name_required": "Provider name is required"
        }
      }
    }
  },
  "paths": {
    "/api/providers": {
      "post": {
        "tags": [
          "providers"
        ],
        "summary": "Create Provider",
        "description": "Create a new provider (admin access required).",
        "operationId": "create_provider_api_providers_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "providers"
        ],
        "summary": "List Providers",
        "description": "List all providers (admin/manager access required).",
        "operationId": "list_providers_api_providers_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Provider"
                  },
                  "title": "Response List Providers Api Providers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/providers/{provider_id}": {
      "get": {
        "tags": [
          "providers"
        ],
        "summary": "Get Provider",
        "description": "Get a specific provider by provider_id (authenticated access required).",
        "operationId": "get_provider_api_providers__provider_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "providers"
        ],
        "summary": "Update Provider",
        "description": "Update a specific provider by provider_id (owner or admin access required).",
        "operationId": "update_provider_api_providers__provider_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Provider Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "providers"
        ],
        "summary": "Delete Provider",
        "description": "Delete a specific provider by provider_id (admin access required).",
        "operationId": "delete_provider_api_providers__provider_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/featured": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get Featured Activities",
        "description": "Get featured activities with authenticated tenant isolation.",
        "operationId": "get_featured_activities_api_activities_featured_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1,
              "default": 5,
              "title": "Limit"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  },
                  "title": "Response Get Featured Activities Api Activities Featured Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/upcoming": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get Upcoming Activities",
        "description": "Get upcoming activities starting within the specified number of days.",
        "operationId": "get_upcoming_activities_api_activities_upcoming_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "default": 30,
              "title": "Days"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  },
                  "title": "Response Get Upcoming Activities Api Activities Upcoming Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/category/{category}": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get Activities By Category",
        "description": "Get activities by category with authenticated tenant isolation.",
        "operationId": "get_activities_by_category_api_activities_category__category__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Category"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  },
                  "title": "Response Get Activities By Category Api Activities Category  Category  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/{item_id}/status": {
      "patch": {
        "tags": [
          "activities"
        ],
        "summary": "Update Activity Status",
        "description": "Update just the status of an activity with authenticated tenant isolation.",
        "operationId": "update_activity_status_api_activities__item_id__status_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ActivityStatus",
              "description": "New status for the activity"
            },
            "description": "New status for the activity"
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/search": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Search Activities",
        "description": "Search for activities by name or description with authenticated tenant isolation.",
        "operationId": "search_activities_api_activities_search_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  },
                  "title": "Response Search Activities Api Activities Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/provider/{provider_id}": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get Activities By Provider",
        "description": "Get all activities for a specific provider with authenticated tenant isolation.\nOnly allows access if the requested provider_id matches the authenticated provider.",
        "operationId": "get_activities_by_provider_api_activities_provider__provider_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  },
                  "title": "Response Get Activities By Provider Api Activities Provider  Provider Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities": {
      "post": {
        "tags": [
          "activities"
        ],
        "summary": "Create Activity",
        "description": "Create a new activity with authenticated tenant isolation.",
        "operationId": "create_activity_api_activities_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Read Activities",
        "description": "List activities with optional filters, sorting, and pagination.",
        "operationId": "read_activities_api_activities_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Level"
            }
          },
          {
            "name": "featured",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Featured"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Field to sort by",
              "title": "Sort By"
            },
            "description": "Field to sort by"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(asc|desc)$",
              "default": "asc",
              "title": "Sort Order"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 500,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Read Activities Api Activities Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/paginated": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Read Activities Paginated",
        "description": "List activities with optimized cursor-based pagination for better performance.\n\nThis endpoint uses cursor-based pagination which provides:\n- Consistent performance regardless of page number\n- Better scalability for large datasets\n- Real-time data consistency",
        "operationId": "read_activities_paginated_api_activities_paginated_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "provider_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Id"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(asc|desc)$"
                },
                {
                  "type": "null"
                }
              ],
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_Activity_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/{item_id}": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Read Activity",
        "description": "Get a specific activity by ID with authenticated tenant isolation.",
        "operationId": "read_activity_api_activities__item_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "activities"
        ],
        "summary": "Patch Activity",
        "description": "Partially update an activity.",
        "operationId": "patch_activity_api_activities__item_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "activities"
        ],
        "summary": "Update Activity",
        "description": "Update an activity with authenticated tenant isolation.",
        "operationId": "update_activity_api_activities__item_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "activities"
        ],
        "summary": "Delete Activity",
        "description": "Delete an activity with authenticated tenant isolation.",
        "operationId": "delete_activity_api_activities__item_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/trainer/{trainer_id}": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get Activities By Trainer",
        "description": "Get all activities for a specific trainer with authenticated tenant isolation.",
        "operationId": "get_activities_by_trainer_api_activities_trainer__trainer_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "trainer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trainer Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  },
                  "title": "Response Get Activities By Trainer Api Activities Trainer  Trainer Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/participants/email/{email}": {
      "get": {
        "tags": [
          "participants"
        ],
        "summary": "Get Participant By Email",
        "description": "Get a participant by email address with authenticated tenant isolation.",
        "operationId": "get_participant_by_email_api_participants_email__email__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Participant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/participants": {
      "post": {
        "tags": [
          "participants"
        ],
        "summary": "Create Participant",
        "description": "Create a new participant with authenticated tenant isolation.",
        "operationId": "create_participant_api_participants_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParticipantCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Participant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "participants"
        ],
        "summary": "List Participants",
        "description": "List participants with authenticated tenant isolation.",
        "operationId": "list_participants_api_participants_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Participant"
                  },
                  "title": "Response List Participants Api Participants Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/participants/{item_id}": {
      "get": {
        "tags": [
          "participants"
        ],
        "summary": "Get Participant",
        "description": "Get a specific participant by ID with authenticated tenant isolation.",
        "operationId": "get_participant_api_participants__item_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Participant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "participants"
        ],
        "summary": "Patch Participant",
        "description": "Partially update a participant with authenticated tenant isolation.",
        "operationId": "patch_participant_api_participants__item_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParticipantUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Participant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "participants"
        ],
        "summary": "Update Participant",
        "description": "Update a participant with authenticated tenant isolation.",
        "operationId": "update_participant_api_participants__item_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParticipantUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Participant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "participants"
        ],
        "summary": "Delete Participant",
        "description": "Delete a participant with authenticated tenant isolation.",
        "operationId": "delete_participant_api_participants__item_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/participant/{participant_id}": {
      "get": {
        "tags": [
          "enrollments"
        ],
        "summary": "Get Enrollments By Participant",
        "description": "Get all enrollments for a specific participant with authenticated tenant isolation.",
        "operationId": "get_enrollments_by_participant_api_enrollments_participant__participant_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Participant Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by enrollment status",
              "title": "Status"
            },
            "description": "Filter by enrollment status"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by enrollment date (start range)",
              "title": "Start Date"
            },
            "description": "Filter by enrollment date (start range)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by enrollment date (end range)",
              "title": "End Date"
            },
            "description": "Filter by enrollment date (end range)"
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enrollment"
                  },
                  "title": "Response Get Enrollments By Participant Api Enrollments Participant  Participant Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/activity/{activity_id}": {
      "get": {
        "tags": [
          "enrollments"
        ],
        "summary": "Get Enrollments By Activity",
        "description": "Get all enrollments for a specific activity with authenticated tenant isolation.",
        "operationId": "get_enrollments_by_activity_api_enrollments_activity__activity_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Activity Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by enrollment status",
              "title": "Status"
            },
            "description": "Filter by enrollment status"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by enrollment date (start range)",
              "title": "Start Date"
            },
            "description": "Filter by enrollment date (start range)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by enrollment date (end range)",
              "title": "End Date"
            },
            "description": "Filter by enrollment date (end range)"
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enrollment"
                  },
                  "title": "Response Get Enrollments By Activity Api Enrollments Activity  Activity Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments": {
      "post": {
        "tags": [
          "enrollments"
        ],
        "summary": "Create Enrollment",
        "description": "Create a new enrollment with authenticated tenant isolation and business logic validation.",
        "operationId": "create_enrollment_api_enrollments_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollmentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enrollment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "enrollments"
        ],
        "summary": "List Enrollments",
        "description": "List enrollments with authenticated tenant isolation and optional filtering.",
        "operationId": "list_enrollments_api_enrollments_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by enrollment status",
              "title": "Status"
            },
            "description": "Filter by enrollment status"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by enrollment date (start range)",
              "title": "Start Date"
            },
            "description": "Filter by enrollment date (start range)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by enrollment date (end range)",
              "title": "End Date"
            },
            "description": "Filter by enrollment date (end range)"
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enrollment"
                  },
                  "title": "Response List Enrollments Api Enrollments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/status/{status}": {
      "get": {
        "tags": [
          "enrollments"
        ],
        "summary": "Get Enrollments By Status",
        "description": "Get all enrollments with a specific status with authenticated tenant isolation.",
        "operationId": "get_enrollments_by_status_api_enrollments_status__status__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EnrollmentStatus"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enrollment"
                  },
                  "title": "Response Get Enrollments By Status Api Enrollments Status  Status  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/recent/{days}": {
      "get": {
        "tags": [
          "enrollments"
        ],
        "summary": "Get Recent Enrollments",
        "description": "Get enrollments created within the last specified number of days with authenticated tenant isolation.",
        "operationId": "get_recent_enrollments_api_enrollments_recent__days__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "title": "Days"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enrollment"
                  },
                  "title": "Response Get Recent Enrollments Api Enrollments Recent  Days  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/{enrollment_id}/status": {
      "patch": {
        "tags": [
          "enrollments"
        ],
        "summary": "Update Enrollment Status",
        "description": "Update only the status of an enrollment with authenticated tenant isolation.",
        "operationId": "update_enrollment_status_api_enrollments__enrollment_id__status_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "enrollment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Enrollment Id"
            }
          },
          {
            "name": "status_value",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EnrollmentStatus"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enrollment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/search": {
      "get": {
        "tags": [
          "enrollments"
        ],
        "summary": "Search Enrollments",
        "description": "Search enrollments with authenticated tenant isolation.",
        "operationId": "search_enrollments_api_enrollments_search_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Search query string",
              "default": "",
              "title": "Query"
            },
            "description": "Search query string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by enrollment status",
              "title": "Status"
            },
            "description": "Filter by enrollment status"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by enrollment date (start range)",
              "title": "Start Date"
            },
            "description": "Filter by enrollment date (start range)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by enrollment date (end range)",
              "title": "End Date"
            },
            "description": "Filter by enrollment date (end range)"
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enrollment"
                  },
                  "title": "Response Search Enrollments Api Enrollments Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/{item_id}": {
      "get": {
        "tags": [
          "enrollments"
        ],
        "summary": "Get Enrollment",
        "description": "Get a specific enrollment by ID with authenticated tenant isolation.",
        "operationId": "get_enrollment_api_enrollments__item_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enrollment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "enrollments"
        ],
        "summary": "Patch Enrollment",
        "description": "Partially update an enrollment with authenticated tenant isolation.",
        "operationId": "patch_enrollment_api_enrollments__item_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enrollment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "enrollments"
        ],
        "summary": "Update Enrollment",
        "description": "Update an enrollment with authenticated tenant isolation.",
        "operationId": "update_enrollment_api_enrollments__item_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enrollment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enrollments"
        ],
        "summary": "Delete Enrollment",
        "description": "Delete an enrollment with authenticated tenant isolation.",
        "operationId": "delete_enrollment_api_enrollments__item_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/marketing/leads": {
      "post": {
        "tags": [
          "marketing"
        ],
        "summary": "Create Lead",
        "description": "Create a new lead with authenticated tenant isolation.",
        "operationId": "create_lead_api_marketing_leads_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "List Leads",
        "description": "List leads with authenticated tenant isolation and optional filtering.",
        "operationId": "list_leads_api_marketing_leads_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by lead status",
              "title": "Status"
            },
            "description": "Filter by lead status"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by lead source",
              "title": "Source"
            },
            "description": "Filter by lead source"
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lead"
                  },
                  "title": "Response List Leads Api Marketing Leads Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/marketing/leads/{item_id}": {
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "Get Lead",
        "description": "Get a specific lead by ID with authenticated tenant isolation.",
        "operationId": "get_lead_api_marketing_leads__item_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "marketing"
        ],
        "summary": "Patch Lead",
        "description": "Partially update a lead with authenticated tenant isolation.",
        "operationId": "patch_lead_api_marketing_leads__item_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "marketing"
        ],
        "summary": "Update Lead",
        "description": "Update a lead with authenticated tenant isolation.",
        "operationId": "update_lead_api_marketing_leads__item_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "marketing"
        ],
        "summary": "Delete Lead",
        "description": "Delete a lead with authenticated tenant isolation.",
        "operationId": "delete_lead_api_marketing_leads__item_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/marketing/leads/by-source/{source}": {
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "Get Leads By Source",
        "description": "Get all leads from a specific source with authenticated tenant isolation.",
        "operationId": "get_leads_by_source_api_marketing_leads_by_source__source__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LeadSource"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lead"
                  },
                  "title": "Response Get Leads By Source Api Marketing Leads By Source  Source  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/marketing/leads/by-status/{status}": {
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "Get Leads By Status",
        "description": "Get all leads with a specific status with authenticated tenant isolation.",
        "operationId": "get_leads_by_status_api_marketing_leads_by_status__status__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LeadStatus"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lead"
                  },
                  "title": "Response Get Leads By Status Api Marketing Leads By Status  Status  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/marketing/leads/{lead_id}/convert": {
      "post": {
        "tags": [
          "marketing"
        ],
        "summary": "Convert Lead To Participant",
        "description": "Convert a lead to a participant and enroll them in an activity with authenticated tenant isolation.",
        "operationId": "convert_lead_to_participant_api_marketing_leads__lead_id__convert_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "lead_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Lead Id"
            }
          },
          {
            "name": "activity_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Activity Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/activities": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "List Public Activities",
        "description": "List public activities/courses\n\nThis endpoint provides a public-facing view of available activities with basic information.\nIt's designed for unauthenticated access to course listings.",
        "operationId": "list_public_activities_api_public_activities_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by activity status",
              "title": "Status"
            },
            "description": "Filter by activity status"
          },
          {
            "name": "provider_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by provider ID",
              "title": "Provider Id"
            },
            "description": "Filter by provider ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "description": "Maximum number of activities to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of activities to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  },
                  "title": "Response List Public Activities Api Public Activities Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/activities/{activity_id}": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Get Public Activity",
        "description": "Get details for a specific public activity/course\n\nThis endpoint provides detailed information about a specific course for public viewing.",
        "operationId": "get_public_activity_api_public_activities__activity_id__get",
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Activity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/providers": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "List Public Providers",
        "description": "List public providers\n\nThis endpoint provides a public-facing view of available course providers.",
        "operationId": "list_public_providers_api_public_providers_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "description": "Maximum number of providers to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of providers to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Provider"
                  },
                  "title": "Response List Public Providers Api Public Providers Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/providers/{provider_id}": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Get Public Provider",
        "description": "Get details for a specific public provider\n\nThis endpoint provides detailed information about a specific course provider for public viewing.",
        "operationId": "get_public_provider_api_public_providers__provider_id__get",
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/providers/{provider_id}/activities": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Get Provider Activities",
        "description": "Get all activities/courses for a specific provider\n\nThis endpoint provides a list of all courses offered by a specific provider.",
        "operationId": "get_provider_activities_api_public_providers__provider_id__activities_get",
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  },
                  "title": "Response Get Provider Activities Api Public Providers  Provider Id  Activities Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health Check",
        "description": "Basic health check endpoint that returns service status and uptime.\n\nThis endpoint is used by monitoring tools to check if the API is responsive.",
        "operationId": "health_check_api_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/health/errors": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Error Statistics",
        "description": "Get error statistics for monitoring and alerting.\n\nReturns error counts by type and endpoint for service monitoring.",
        "operationId": "error_statistics_api_health_errors_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/health/errors/reset": {
      "post": {
        "tags": [
          "health"
        ],
        "summary": "Reset Error Statistics",
        "description": "Reset error statistics (admin function).\n\nClears all error counters and resets tracking.",
        "operationId": "reset_error_statistics_api_health_errors_reset_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/health/detailed": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Detailed Health Check",
        "description": "Detailed health check including database and external dependencies.\n\nReturns comprehensive system status for monitoring dashboards.",
        "operationId": "detailed_health_check_api_health_detailed_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/search/activities": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Search Activities",
        "description": "Search activities by name or description",
        "operationId": "search_activities_api_search_activities_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Search query string",
              "title": "Q"
            },
            "description": "Search query string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "description": "Maximum number of results to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of results to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/participants": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Search Participants",
        "description": "Search participants by name or email",
        "operationId": "search_participants_api_search_participants_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Search query string",
              "title": "Q"
            },
            "description": "Search query string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "description": "Maximum number of results to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of results to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Search",
        "description": "Search across multiple resource types\n\nThis endpoint allows searching across activities, providers, and participants.\nUse the 'type' parameter to restrict search to a specific resource type.",
        "operationId": "search_api_search_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Search query string",
              "title": "Q"
            },
            "description": "Search query string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Type of resource to search (activity, provider, participant, enrollment)",
              "title": "Type"
            },
            "description": "Type of resource to search (activity, provider, participant, enrollment)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "description": "Maximum number of results to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of results to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login",
        "description": "Authenticate user and return JWT tokens",
        "operationId": "login_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/google": {
      "post": {
        "tags": [
          "Google Authentication"
        ],
        "summary": "Google Login",
        "description": "Authenticate a provisioned user via Google token\n\nThis endpoint validates Google ID tokens and authenticates users\nwho have been pre-provisioned in the system. It does NOT allow\npublic registration - users must be added by administrators first.\n\nArgs:\n    request: Google authentication request with ID token\n    \nReturns:\n    JWT tokens and user information\n    \nRaises:\n    HTTPException: If authentication fails for any reason",
        "operationId": "google_login_api_auth_google_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleLoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Refresh Token",
        "description": "Refresh access token using refresh token",
        "operationId": "refresh_token_api_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Current User Info",
        "description": "Get current authenticated user information",
        "operationId": "get_current_user_info_api_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__endpoints__auth__UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Logout",
        "description": "Logout user (in a real app, you might blacklist the token)",
        "operationId": "logout_api_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/google/config": {
      "get": {
        "tags": [
          "Google Authentication"
        ],
        "summary": "Get Google Config",
        "description": "Get Google authentication configuration for frontend\n\nReturns:\n    Dictionary with Google client configuration",
        "operationId": "get_google_config_api_auth_google_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Google Config Api Auth Google Config Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/": {
      "post": {
        "tags": [
          "admin-users"
        ],
        "summary": "Create User",
        "description": "Create a new user (Admin only)\n\nOnly provider administrators can create new users.\nThe new user will be associated with the admin's provider.",
        "operationId": "create_user_api_admin_users__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__user__UserResponse"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "admin-users"
        ],
        "summary": "List Users",
        "description": "List all users in the provider (Admin only)\n\nReturns paginated list of users in the admin's provider.",
        "operationId": "list_users_api_admin_users__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__user__UserListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{user_id}": {
      "get": {
        "tags": [
          "admin-users"
        ],
        "summary": "Get User",
        "description": "Get a specific user (Admin only)",
        "operationId": "get_user_api_admin_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__user__UserResponse"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin-users"
        ],
        "summary": "Update User",
        "description": "Update a user (Admin only)\n\nAdmins can update user details including role and active status.",
        "operationId": "update_user_api_admin_users__user_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__user__UserResponse"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin-users"
        ],
        "summary": "Delete User",
        "description": "Delete/Deactivate a user (Admin only)\n\nThis performs a soft delete by setting is_active to False.",
        "operationId": "delete_user_api_admin_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "403": {
            "description": "Not authorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{user_id}/reset-password": {
      "post": {
        "tags": [
          "admin-users"
        ],
        "summary": "Reset User Password",
        "description": "Reset a user's password (Admin only)\n\nGenerates a temporary password that must be changed on first login.",
        "operationId": "reset_user_password_api_admin_users__user_id__reset_password_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Reset User Password Api Admin Users  User Id  Reset Password Post"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/sms/send": {
      "post": {
        "tags": [
          "SMS"
        ],
        "summary": "Send Sms",
        "description": "Send SMS to specified phone numbers via AWS SNS.",
        "operationId": "send_sms_api_sms_send_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleSMSSendRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleSMSSendResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/sms/history": {
      "get": {
        "tags": [
          "SMS"
        ],
        "summary": "Get Sms History",
        "description": "Get SMS message history from DynamoDB.",
        "operationId": "get_sms_history_api_sms_history_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of messages to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Number of messages to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of messages to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of messages to skip"
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleSMSHistoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/sms/{message_id}": {
      "get": {
        "tags": [
          "SMS"
        ],
        "summary": "Get Sms Message",
        "description": "Get details for a specific SMS message from DynamoDB.",
        "operationId": "get_sms_message_api_sms__message_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleSMSMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SMS"
        ],
        "summary": "Delete Sms Message",
        "description": "Delete an SMS message from DynamoDB.",
        "operationId": "delete_sms_message_api_sms__message_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message Id"
            }
          },
          {
            "name": "x-provider-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Provider-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/super-admin/users/invite": {
      "post": {
        "tags": [
          "super-admin"
        ],
        "summary": "Invite User",
        "description": "Invite a new user to a provider organization\nCreates user in database without password (Google auth only)",
        "operationId": "invite_user_api_super_admin_users_invite_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInvitationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/super-admin/users": {
      "get": {
        "tags": [
          "super-admin"
        ],
        "summary": "List All Users",
        "description": "List all users across all providers (or filter by provider)",
        "operationId": "list_all_users_api_super_admin_users_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__endpoints__super_admin__UserListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/super-admin/users/{user_id}/status": {
      "put": {
        "tags": [
          "super-admin"
        ],
        "summary": "Toggle User Status",
        "description": "Activate or suspend a user",
        "operationId": "toggle_user_status_api_super_admin_users__user_id__status_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "provider_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/super-admin/users/{user_id}": {
      "delete": {
        "tags": [
          "super-admin"
        ],
        "summary": "Delete User",
        "description": "Delete a user permanently",
        "operationId": "delete_user_api_super_admin_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "provider_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/super-admin/providers": {
      "get": {
        "tags": [
          "super-admin"
        ],
        "summary": "List All Providers",
        "description": "List all provider organizations",
        "operationId": "list_all_providers_api_super_admin_providers_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/super-admin/providers/{provider_id}": {
      "delete": {
        "tags": [
          "super-admin"
        ],
        "summary": "Delete Provider",
        "description": "Delete a provider and all associated data",
        "operationId": "delete_provider_api_super_admin_providers__provider_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dev/auth/providers": {
      "get": {
        "tags": [
          "dev-auth"
        ],
        "summary": "Get Dev Providers",
        "description": "Get list of available development providers.\n\nDEV MODE ONLY - This endpoint is disabled in production.",
        "operationId": "get_dev_providers_api_dev_auth_providers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DevProvider"
                  },
                  "type": "array",
                  "title": "Response Get Dev Providers Api Dev Auth Providers Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/dev/auth/login": {
      "post": {
        "tags": [
          "dev-auth"
        ],
        "summary": "Dev Login",
        "description": "Development-only login endpoint.\n\nThis endpoint allows developers to quickly switch between providers\nfor testing multi-tenant functionality. It returns a valid JWT token\nthat works with the regular authentication system.\n\nDEV MODE ONLY - This endpoint is disabled in production.",
        "operationId": "dev_login_api_dev_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevLoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dev/auth/quick-switch/{provider_id}": {
      "post": {
        "tags": [
          "dev-auth"
        ],
        "summary": "Quick Switch Provider",
        "description": "Quick switch to a predefined provider.\n\nDEV MODE ONLY - This endpoint is disabled in production.",
        "operationId": "quick_switch_provider_api_dev_auth_quick_switch__provider_id__post",
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevLoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dev/auth/current": {
      "get": {
        "tags": [
          "dev-auth"
        ],
        "summary": "Get Current Dev User",
        "description": "Get current authenticated user info.\n\nThis endpoint works with both dev and production tokens.",
        "operationId": "get_current_dev_user_api_dev_auth_current_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Current User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Current Dev User Api Dev Auth Current Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dev-login": {
      "get": {
        "summary": "Dev Login Page",
        "description": "Serve the dev login page",
        "operationId": "dev_login_page_dev_login_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/super-admin": {
      "get": {
        "summary": "Super Admin Panel",
        "description": "Serve the super admin panel",
        "operationId": "super_admin_panel_super_admin_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "root"
        ],
        "summary": "Read Root",
        "operationId": "read_root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/test/comprehensive": {
      "get": {
        "tags": [
          "testing"
        ],
        "summary": "Run Comprehensive Tests",
        "description": "Run comprehensive test suite and return results",
        "operationId": "run_comprehensive_tests_api_test_comprehensive_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Activity": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "provider_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Activity name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Activity description",
            "maxLength": 2000
          },
          "capacity": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity",
            "description": "Maximum participants",
            "minimum": 1,
            "maximum": 1000
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "Activity start date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "Activity end date"
          },
          "status": {
            "$ref": "#/components/schemas/ActivityStatus",
            "description": "Activity status",
            "default": "draft"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "Activity location"
          },
          "type": {
            "$ref": "#/components/schemas/ActivityType",
            "description": "Type of activity",
            "default": "course"
          },
          "price": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price",
            "description": "Price in local currency",
            "minimum": 0,
            "multipleOf": 0.01
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "title": "Currency",
            "description": "Currency code",
            "default": "USD"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Activity category"
          },
          "featured": {
            "type": "boolean",
            "title": "Featured",
            "description": "Whether this activity is featured",
            "default": false
          },
          "enrollments_count": {
            "type": "integer",
            "title": "Enrollments Count",
            "description": "Number of current enrollments",
            "default": 0
          },
          "available_spots": {
            "type": "integer",
            "title": "Available Spots",
            "description": "Available spots remaining",
            "default": 0
          },
          "is_fully_booked": {
            "type": "boolean",
            "title": "Is Fully Booked",
            "description": "Whether activity is at capacity",
            "default": false
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Activity",
        "description": "Complete activity schema with all fields"
      },
      "ActivityCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Activity name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Activity description",
            "maxLength": 2000
          },
          "capacity": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity",
            "description": "Maximum participants",
            "minimum": 1,
            "maximum": 1000
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "Activity start date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "Activity end date"
          },
          "status": {
            "$ref": "#/components/schemas/ActivityStatus",
            "description": "Activity status",
            "default": "draft"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "Activity location"
          },
          "type": {
            "$ref": "#/components/schemas/ActivityType",
            "description": "Type of activity",
            "default": "course"
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price",
            "description": "Price in local currency",
            "minimum": 0,
            "multipleOf": 0.01
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "title": "Currency",
            "description": "Currency code",
            "default": "USD"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Activity category"
          },
          "featured": {
            "type": "boolean",
            "title": "Featured",
            "description": "Whether this activity is featured",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ActivityCreate",
        "description": "Schema for creating a new activity",
        "example": {
          "name": "Morning Yoga",
          "description": "Relaxing yoga session to start your day",
          "capacity": 20,
          "price": 25.0,
          "start_date": "2024-01-15",
          "end_date": "2024-01-15",
          "type": "course",
          "status": "draft"
        }
      },
      "ActivityStatus": {
        "type": "string",
        "enum": [
          "draft",
          "published",
          "ongoing",
          "completed",
          "cancelled"
        ],
        "title": "ActivityStatus",
        "description": "Activity status enumeration"
      },
      "ActivityType": {
        "type": "string",
        "enum": [
          "course",
          "workshop",
          "seminar",
          "webinar",
          "other"
        ],
        "title": "ActivityType",
        "description": "Activity type enumeration"
      },
      "ActivityUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "capacity": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Capacity"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActivityStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActivityType"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "featured": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Featured"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "ActivityUpdate",
        "description": "Schema for updating activity information"
      },
      "DevLoginRequest": {
        "properties": {
          "provider_id": {
            "type": "string",
            "title": "Provider Id"
          },
          "provider_name": {
            "type": "string",
            "title": "Provider Name",
            "default": "Development Provider"
          },
          "user_name": {
            "type": "string",
            "title": "User Name",
            "default": "Dev User"
          },
          "user_email": {
            "type": "string",
            "title": "User Email",
            "default": "dev@example.com"
          }
        },
        "type": "object",
        "required": [
          "provider_id"
        ],
        "title": "DevLoginRequest",
        "description": "Development login request - select a provider to impersonate"
      },
      "DevLoginResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "provider_id": {
            "type": "string",
            "title": "Provider Id"
          },
          "provider_name": {
            "type": "string",
            "title": "Provider Name"
          },
          "user_name": {
            "type": "string",
            "title": "User Name"
          },
          "user_email": {
            "type": "string",
            "title": "User Email"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "warning": {
            "type": "string",
            "title": "Warning",
            "default": "DEV MODE ONLY - DO NOT USE IN PRODUCTION"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "provider_id",
          "provider_name",
          "user_name",
          "user_email",
          "expires_at"
        ],
        "title": "DevLoginResponse",
        "description": "Development login response with JWT token"
      },
      "DevProvider": {
        "properties": {
          "provider_id": {
            "type": "string",
            "title": "Provider Id"
          },
          "provider_name": {
            "type": "string",
            "title": "Provider Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "has_sample_data": {
            "type": "boolean",
            "title": "Has Sample Data"
          }
        },
        "type": "object",
        "required": [
          "provider_id",
          "provider_name",
          "description",
          "has_sample_data"
        ],
        "title": "DevProvider",
        "description": "Available development providers"
      },
      "Enrollment": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "provider_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "activity_id": {
            "type": "string",
            "format": "uuid",
            "title": "Activity Id",
            "description": "Activity being enrolled in"
          },
          "participant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Participant Id",
            "description": "Participant enrolling"
          },
          "status": {
            "$ref": "#/components/schemas/EnrollmentStatus",
            "description": "Enrollment status",
            "default": "pending"
          },
          "enrollment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Enrollment Date",
            "description": "When enrollment was created"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes"
          },
          "special_requirements": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Requirements",
            "description": "Special accommodations needed"
          },
          "days_remaining": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Remaining",
            "description": "Days until activity starts/ends"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "activity_id",
          "participant_id"
        ],
        "title": "Enrollment",
        "description": "Complete enrollment schema with all fields"
      },
      "EnrollmentCreate": {
        "properties": {
          "activity_id": {
            "type": "string",
            "format": "uuid",
            "title": "Activity Id",
            "description": "Activity being enrolled in"
          },
          "participant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Participant Id",
            "description": "Participant enrolling"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EnrollmentStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Initial status",
            "default": "pending"
          },
          "enrollment_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enrollment Date",
            "description": "When enrollment was created"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes"
          },
          "special_requirements": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Requirements",
            "description": "Special accommodations needed"
          }
        },
        "type": "object",
        "required": [
          "activity_id",
          "participant_id"
        ],
        "title": "EnrollmentCreate",
        "description": "Schema for creating a new enrollment",
        "example": {
          "activity_id": "123e4567-e89b-12d3-a456-426614174000",
          "participant_id": "987fcdeb-51a2-43d1-b123-456789abcdef",
          "status": "pending"
        }
      },
      "EnrollmentStatus": {
        "type": "string",
        "enum": [
          "pending",
          "confirmed",
          "cancelled",
          "completed",
          "waitlisted",
          "no_show",
          "in_progress"
        ],
        "title": "EnrollmentStatus",
        "description": "Enrollment status enumeration"
      },
      "EnrollmentUpdate": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EnrollmentStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "special_requirements": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Requirements"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "EnrollmentUpdate",
        "description": "Schema for updating enrollment information"
      },
      "GoogleLoginRequest": {
        "properties": {
          "google_token": {
            "type": "string",
            "title": "Google Token"
          }
        },
        "type": "object",
        "required": [
          "google_token"
        ],
        "title": "GoogleLoginRequest"
      },
      "GoogleLoginResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In",
            "default": 1800
          },
          "user": {
            "additionalProperties": true,
            "type": "object",
            "title": "User"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "user"
        ],
        "title": "GoogleLoginResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Lead": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "provider_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "first_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "First Name",
            "description": "First name"
          },
          "last_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Last Name",
            "description": "Last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Email address"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Phone number",
            "maxLength": 20,
            "pattern": "^[\\d\\s\\-\\(\\)\\+\\.]+$"
          },
          "source": {
            "$ref": "#/components/schemas/LeadSource",
            "description": "How lead was acquired",
            "default": "website"
          },
          "status": {
            "$ref": "#/components/schemas/LeadStatus",
            "description": "Current lead status",
            "default": "new"
          },
          "activity_of_interest": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activity Of Interest",
            "description": "Activity ID they're interested in"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes",
            "maxLength": 1000
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name",
            "description": "Full name (computed)"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email"
        ],
        "title": "Lead",
        "description": "Complete lead schema with all fields"
      },
      "LeadCreate": {
        "properties": {
          "first_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Last Name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "maxLength": 20,
            "pattern": "^[\\d\\s\\-\\(\\)\\+\\.]+$"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LeadSource"
              },
              {
                "type": "null"
              }
            ],
            "default": "website"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LeadStatus"
              },
              {
                "type": "null"
              }
            ],
            "default": "new"
          },
          "activity_of_interest": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activity Of Interest"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "maxLength": 1000
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email"
        ],
        "title": "LeadCreate",
        "description": "Schema for creating a new lead",
        "example": {
          "first_name": "Jane",
          "last_name": "Smith",
          "email": "jane.smith@example.com",
          "phone": "+1-555-456-7890",
          "source": "website",
          "status": "new",
          "notes": "Interested in yoga classes"
        }
      },
      "LeadSource": {
        "type": "string",
        "enum": [
          "website",
          "referral",
          "social_media",
          "email",
          "advertisement",
          "other"
        ],
        "title": "LeadSource",
        "description": "Lead source enumeration"
      },
      "LeadStatus": {
        "type": "string",
        "enum": [
          "new",
          "contacted",
          "qualified",
          "converted",
          "lost"
        ],
        "title": "LeadStatus",
        "description": "Lead status enumeration"
      },
      "LeadUpdate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LeadSource"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LeadStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "activity_of_interest": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activity Of Interest"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "LeadUpdate",
        "description": "Schema for updating lead information"
      },
      "LoginRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "LoginRequest"
      },
      "PaginatedResponse_Activity_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Activity"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items in this page"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "description": "Number of items in this page"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total",
            "description": "Total number of items (if available)"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more items available"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor",
            "description": "Cursor for next page"
          }
        },
        "type": "object",
        "required": [
          "items",
          "count",
          "has_more"
        ],
        "title": "PaginatedResponse[Activity]"
      },
      "Participant": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "provider_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "first_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "First Name",
            "description": "First name"
          },
          "last_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Last Name",
            "description": "Last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Email address"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Phone number",
            "maxLength": 20,
            "pattern": "^[\\d\\s\\-\\(\\)\\+\\.]+$"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth",
            "description": "Date of birth"
          },
          "address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Address",
            "description": "Physical address"
          },
          "emergency_contact": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact",
            "description": "Emergency contact name"
          },
          "emergency_phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Phone",
            "description": "Emergency contact phone"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name",
            "description": "Full name (computed)"
          },
          "enrollments_count": {
            "type": "integer",
            "title": "Enrollments Count",
            "description": "Number of current enrollments",
            "default": 0
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email"
        ],
        "title": "Participant",
        "description": "Complete participant schema with all fields"
      },
      "ParticipantCreate": {
        "properties": {
          "first_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "First Name",
            "description": "First name"
          },
          "last_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Last Name",
            "description": "Last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Email address"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Phone number",
            "maxLength": 20,
            "pattern": "^[\\d\\s\\-\\(\\)\\+\\.]+$"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth",
            "description": "Date of birth"
          },
          "address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Address",
            "description": "Physical address"
          },
          "emergency_contact": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact",
            "description": "Emergency contact name"
          },
          "emergency_phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Phone",
            "description": "Emergency contact phone"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email"
        ],
        "title": "ParticipantCreate",
        "description": "Schema for creating a new participant",
        "example": {
          "first_name": "John",
          "last_name": "Doe",
          "email": "john.doe@example.com",
          "phone": "+1-555-123-4567",
          "date_of_birth": "1990-01-01"
        }
      },
      "ParticipantUpdate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth"
          },
          "address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "emergency_contact": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact"
          },
          "emergency_phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Phone"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "ParticipantUpdate",
        "description": "Schema for updating participant information"
      },
      "Provider": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "provider_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Provider name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Provider description",
            "maxLength": 2000
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Contact email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Contact phone number",
            "maxLength": 20,
            "pattern": "^[\\d\\s\\-\\(\\)\\+\\.]+$"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website",
            "description": "Website URL",
            "format": "uri",
            "maxLength": 2083
          },
          "address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Address",
            "description": "Physical address",
            "maxLength": 500
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url",
            "description": "Logo image URL"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "title": "Provider",
        "description": "Complete provider schema with all fields"
      },
      "ProviderCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Provider name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Provider description",
            "maxLength": 2000
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Contact email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Contact phone number",
            "maxLength": 20,
            "pattern": "^[\\d\\s\\-\\(\\)\\+\\.]+$"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website",
            "description": "Website URL",
            "format": "uri",
            "maxLength": 2083
          },
          "address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Address",
            "description": "Physical address",
            "maxLength": 500
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url",
            "description": "Logo image URL"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "title": "ProviderCreate",
        "description": "Schema for creating a new provider",
        "example": {
          "name": "Wellness Studio",
          "email": "info@wellnessstudio.com",
          "description": "Premier wellness and fitness studio",
          "phone": "+1-555-987-6543",
          "website": "https://wellnessstudio.com",
          "address": "123 Health St, Wellness City, WC 12345"
        }
      },
      "ProviderListResponse": {
        "properties": {
          "providers": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Providers"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "providers",
          "total"
        ],
        "title": "ProviderListResponse"
      },
      "ProviderUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          },
          "address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "ProviderUpdate",
        "description": "Schema for updating provider information"
      },
      "RefreshTokenRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequest"
      },
      "SMSStatus": {
        "type": "string",
        "enum": [
          "pending",
          "sending",
          "sent",
          "failed"
        ],
        "title": "SMSStatus",
        "description": "Simplified SMS message status."
      },
      "SimpleSMSHistoryResponse": {
        "properties": {
          "messages": {
            "items": {
              "$ref": "#/components/schemas/SimpleSMSMessage"
            },
            "type": "array",
            "title": "Messages",
            "description": "List of SMS messages"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of messages"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Requested limit"
          },
          "offset": {
            "type": "integer",
            "title": "Offset",
            "description": "Requested offset"
          }
        },
        "type": "object",
        "required": [
          "messages",
          "total",
          "limit",
          "offset"
        ],
        "title": "SimpleSMSHistoryResponse",
        "description": "Simplified SMS history response."
      },
      "SimpleSMSMessage": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Message identifier"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Message content"
          },
          "phone_numbers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Phone Numbers",
            "description": "List of phone numbers"
          },
          "total_recipients": {
            "type": "integer",
            "title": "Total Recipients",
            "description": "Number of recipients"
          },
          "status": {
            "$ref": "#/components/schemas/SMSStatus",
            "description": "Message status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "When message was created"
          },
          "sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sent At",
            "description": "When message was sent"
          },
          "aws_message_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aws Message Id",
            "description": "AWS SNS message ID"
          }
        },
        "type": "object",
        "required": [
          "id",
          "message",
          "phone_numbers",
          "total_recipients",
          "status",
          "created_at"
        ],
        "title": "SimpleSMSMessage",
        "description": "Simplified SMS message for API responses."
      },
      "SimpleSMSSendRequest": {
        "properties": {
          "message": {
            "type": "string",
            "maxLength": 1600,
            "minLength": 1,
            "title": "Message",
            "description": "SMS message content"
          },
          "phone_numbers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "minItems": 1,
            "title": "Phone Numbers",
            "description": "List of phone numbers in E.164 format"
          },
          "sender_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender Id",
            "description": "Optional sender ID"
          },
          "sms_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Type",
            "description": "SMS type: Promotional or Transactional",
            "default": "Promotional"
          }
        },
        "type": "object",
        "required": [
          "message",
          "phone_numbers"
        ],
        "title": "SimpleSMSSendRequest",
        "description": "Simplified request to send SMS message."
      },
      "SimpleSMSSendResponse": {
        "properties": {
          "message_id": {
            "type": "string",
            "title": "Message Id",
            "description": "Unique message identifier"
          },
          "status": {
            "$ref": "#/components/schemas/SMSStatus",
            "description": "Current message status"
          },
          "total_recipients": {
            "type": "integer",
            "title": "Total Recipients",
            "description": "Number of recipients"
          },
          "aws_message_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aws Message Id",
            "description": "AWS SNS message ID"
          }
        },
        "type": "object",
        "required": [
          "message_id",
          "status",
          "total_recipients"
        ],
        "title": "SimpleSMSSendResponse",
        "description": "Simplified SMS send response."
      },
      "TokenResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In",
            "default": 1800
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token"
        ],
        "title": "TokenResponse"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "manager",
              "user"
            ],
            "title": "Role",
            "default": "user"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "password": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "provider_id": {
            "type": "string",
            "title": "Provider Id",
            "description": "Provider ID this user belongs to"
          }
        },
        "type": "object",
        "required": [
          "email",
          "name",
          "provider_id"
        ],
        "title": "UserCreate",
        "description": "Properties for user creation by admin"
      },
      "UserInvitationRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "manager",
              "user"
            ],
            "title": "Role"
          },
          "provider_id": {
            "type": "string",
            "title": "Provider Id"
          }
        },
        "type": "object",
        "required": [
          "email",
          "name",
          "role",
          "provider_id"
        ],
        "title": "UserInvitationRequest"
      },
      "UserUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "role": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "manager",
                  "user"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "password": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          }
        },
        "type": "object",
        "title": "UserUpdate",
        "description": "Properties for user update"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "app__api__endpoints__auth__UserResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "provider_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "email",
          "name",
          "role"
        ],
        "title": "UserResponse"
      },
      "app__api__endpoints__super_admin__UserListResponse": {
        "properties": {
          "users": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Users"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "users",
          "total"
        ],
        "title": "UserListResponse"
      },
      "app__schemas__user__UserListResponse": {
        "properties": {
          "users": {
            "items": {
              "$ref": "#/components/schemas/app__schemas__user__UserResponse"
            },
            "type": "array",
            "title": "Users"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "default": 20
          }
        },
        "type": "object",
        "required": [
          "users",
          "total"
        ],
        "title": "UserListResponse",
        "description": "Response for user list endpoint"
      },
      "app__schemas__user__UserResponse": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "manager",
              "user"
            ],
            "title": "Role",
            "default": "user"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "provider_id": {
            "type": "string",
            "title": "Provider Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          },
          "google_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Id"
          }
        },
        "type": "object",
        "required": [
          "email",
          "name",
          "id",
          "provider_id",
          "created_at"
        ],
        "title": "UserResponse",
        "description": "User properties returned to client"
      },
      "ValidationPatterns": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "pattern": "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$",
            "description": "Email validation pattern"
          },
          "phone": {
            "type": "string",
            "pattern": "^[\\d\\s\\-\\(\\)\\+\\.]+$",
            "description": "Phone number validation pattern"
          },
          "uuid": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "description": "UUID validation pattern"
          },
          "currency": {
            "type": "string",
            "pattern": "^[A-Z]{3}$",
            "description": "Currency code validation pattern"
          }
        }
      },
      "PaginationParams": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "default": 50,
            "description": "Number of items to return"
          },
          "cursor": {
            "type": "string",
            "nullable": true,
            "description": "Cursor for pagination continuation"
          }
        }
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "List of items in this page"
          },
          "count": {
            "type": "integer",
            "description": "Number of items in this page"
          },
          "total": {
            "type": "integer",
            "nullable": true,
            "description": "Total number of items (if available)"
          },
          "has_more": {
            "type": "boolean",
            "description": "Whether there are more items available"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true,
            "description": "Cursor for next page"
          }
        },
        "required": [
          "items",
          "count",
          "has_more"
        ]
      },
      "APIError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "const": true
          },
          "error_code": {
            "type": "string",
            "description": "Machine-readable error code"
          },
          "message": {
            "type": "string",
            "description": "Human-readable error message"
          },
          "path": {
            "type": "string",
            "description": "API endpoint path"
          },
          "request_id": {
            "type": "string",
            "description": "Unique request identifier"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Error timestamp"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Additional error details"
          }
        },
        "required": [
          "error",
          "error_code",
          "message",
          "path",
          "request_id",
          "timestamp"
        ]
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}